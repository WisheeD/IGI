# Generated by Django 5.0.6 on 2024-05-24 21:23

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requisites', models.TextField(verbose_name='Реквизиты')),
                ('description', models.TextField(verbose_name='Описание')),
                ('history', models.TextField(verbose_name='История компании')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('logo', models.ImageField(upload_to='company_logos/', verbose_name='Логотип')),
                ('video_filename', models.CharField(blank=True, max_length=100, verbose_name='Имя файла видео')),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Описание')),
                ('code', models.CharField(max_length=50, verbose_name='Промокод')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('discount', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Скидка')),
                ('date_expired', models.DateTimeField(blank=True, null=True, verbose_name='Дата истечения срока')),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Содержание')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('summary', models.TextField(max_length=500, verbose_name='Краткое содержание')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата публикации')),
                ('image', models.ImageField(blank=True, null=True, upload_to='news_images/', verbose_name='Изображение')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата')),
                ('question', models.TextField(max_length=1000, verbose_name='Вопрос')),
                ('answer', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Ответ')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.IntegerField(default=0, verbose_name='Оценка')),
                ('review', models.TextField(max_length=1000, verbose_name='Отзыв')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата')),
                ('author', models.CharField(max_length=255, null=True, verbose_name='Автор')),
            ],
        ),
        migrations.CreateModel(
            name='Vacancy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Описание')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата публикации')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_employee', models.BooleanField(default=False)),
                ('city', models.CharField(max_length=100, verbose_name='Город')),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(max_length=100, verbose_name='Страна')),
                ('timezone', models.CharField(blank=True, max_length=100, null=True)),
                ('birthdate', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('work', models.TextField(blank=True, null=True, verbose_name='Выполняемые работы')),
                ('image', models.ImageField(blank=True, null=True, upload_to='user_images/', verbose_name='Аватар')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Realty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.IntegerField(verbose_name='Площадь')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('realty_type', models.CharField(max_length=20, verbose_name='Тип')),
                ('description', models.TextField(max_length=1000, verbose_name='Описание')),
                ('status', models.CharField(choices=[('available', 'Доступно'), ('sold', 'Продано'), ('unavailable', 'Недоступно')], default='available', max_length=20)),
                ('price', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Стоимость')),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Скидка')),
                ('image', models.ImageField(blank=True, null=True, upload_to='realty_images/', verbose_name='Изображение')),
                ('agent', models.ManyToManyField(blank=True, related_name='assigned_properties', to=settings.AUTH_USER_MODEL, verbose_name='Агент')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Владелец')),
            ],
            options={
                'verbose_name': 'Realty',
                'verbose_name_plural': 'Realties',
            },
        ),
        migrations.CreateModel(
            name='Deal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата сделки')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Сумма сделки')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved')], default='pending', max_length=20, verbose_name='Статус сделки')),
                ('deal_type', models.CharField(choices=[('sale', 'Sale'), ('rent', 'Rent')], max_length=20, verbose_name='Тип сделки')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Main.realty', verbose_name='Недвижимость')),
                ('agent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='agent_deals', to=settings.AUTH_USER_MODEL, verbose_name='Агент')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_deals', to=settings.AUTH_USER_MODEL, verbose_name='Клиент')),
            ],
        ),
    ]
